type Time = int;
type TeamStanding = 
 record {
   losses: nat;
   teamId: text;
   ties: nat;
   wins: nat;
 };
type Team = 
 record {
   conference: text;
   division: text;
   id: text;
   name: text;
 };
type Result_1 = 
 variant {
   err: text;
   ok: Game;
 };
type Result = 
 variant {
   err: text;
   ok: vec Game;
 };
type Game = 
 record {
   awayScore: opt nat;
   awayTeam: text;
   date: Time;
   homeScore: opt nat;
   homeTeam: text;
   id: text;
   venue: text;
 };
service : {
  getGameDetails: (text) -> (Result_1) query;
  getStandings: () -> (vec TeamStanding) query;
  getTeams: () -> (vec Team) query;
  getWeeklySchedule: (nat) -> (Result) query;
  initialize: () -> ();
}
